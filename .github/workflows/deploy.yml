name: Deployment

on:
  pull_request:
    branches:
      - master
      - develop
      - stage
    types:
      - closed

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '12.16'

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Setup AWS
        if: github.base_ref == 'develop' || github.base_ref == 'stage' || github.base_ref == 'master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # === `develop` branch ===
      - name: Build (develop)
        if: github.base_ref == 'develop' || github.base_ref == 'develop'
        run: npm run build:develop

      - name: Upload to S3 (devlop)
        if: github.base_ref == 'develop'
        run: |
          aws s3 sync ./build s3://oss-develop.matters.news

      # === `stage` branch ===
      - name: Build (stage)
        if: github.base_ref == 'stage' || github.base_ref == 'stage'
        run: npm run build:stage

      - name: Upload to S3 (stage)
        if: github.base_ref == 'stage'
        run: |
          aws s3 sync ./build s3://oss-stage.matters.news

      # === `master` branch ===
      - name: Build (production)
        if: github.base_ref == 'master' || github.base_ref == 'master'
        run: npm run build:production

      - name: Upload to S3 (production)
        if: github.base_ref == 'master'
        run: |
          aws s3 sync ./build s3://oss.matters.news

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: matters-oss
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
